//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.2
//
// <auto-generated>
//
// Generated from file `Bank.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package pl.edu.agh.sr.generated.BankService;

public class LoanDetails implements java.lang.Cloneable,
                                    java.io.Serializable
{
    public String nativeCurrency;

    public double valueOfNativeCurrency;

    public String foreignCurrency;

    public double valueOfForeignCurrency;

    public LoanDetails()
    {
        this.nativeCurrency = "";
        this.foreignCurrency = "";
    }

    public LoanDetails(String nativeCurrency, double valueOfNativeCurrency, String foreignCurrency, double valueOfForeignCurrency)
    {
        this.nativeCurrency = nativeCurrency;
        this.valueOfNativeCurrency = valueOfNativeCurrency;
        this.foreignCurrency = foreignCurrency;
        this.valueOfForeignCurrency = valueOfForeignCurrency;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LoanDetails r = null;
        if(rhs instanceof LoanDetails)
        {
            r = (LoanDetails)rhs;
        }

        if(r != null)
        {
            if(this.nativeCurrency != r.nativeCurrency)
            {
                if(this.nativeCurrency == null || r.nativeCurrency == null || !this.nativeCurrency.equals(r.nativeCurrency))
                {
                    return false;
                }
            }
            if(this.valueOfNativeCurrency != r.valueOfNativeCurrency)
            {
                return false;
            }
            if(this.foreignCurrency != r.foreignCurrency)
            {
                if(this.foreignCurrency == null || r.foreignCurrency == null || !this.foreignCurrency.equals(r.foreignCurrency))
                {
                    return false;
                }
            }
            if(this.valueOfForeignCurrency != r.valueOfForeignCurrency)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::BankService::LoanDetails");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, nativeCurrency);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, valueOfNativeCurrency);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, foreignCurrency);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, valueOfForeignCurrency);
        return h_;
    }

    public LoanDetails clone()
    {
        LoanDetails c = null;
        try
        {
            c = (LoanDetails)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeString(this.nativeCurrency);
        ostr.writeDouble(this.valueOfNativeCurrency);
        ostr.writeString(this.foreignCurrency);
        ostr.writeDouble(this.valueOfForeignCurrency);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.nativeCurrency = istr.readString();
        this.valueOfNativeCurrency = istr.readDouble();
        this.foreignCurrency = istr.readString();
        this.valueOfForeignCurrency = istr.readDouble();
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, LoanDetails v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public LoanDetails ice_read(com.zeroc.Ice.InputStream istr)
    {
        LoanDetails v = new LoanDetails();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<LoanDetails> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, LoanDetails v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<LoanDetails> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(LoanDetails.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final LoanDetails _nullMarshalValue = new LoanDetails();

    /** @hidden */
    public static final long serialVersionUID = 9032316796438929886L;
}
