//
// Copyright (c) ZeroC, Inc. All rights reserved.
//
//
// Ice version 3.7.2
//
// <auto-generated>
//
// Generated from file `Bank.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package pl.edu.agh.sr.generated.BankService;

public class AccountDetails implements java.lang.Cloneable,
                                       java.io.Serializable
{
    public double income;

    public double balance;

    public AccountType type;

    public AccountDetails()
    {
        this.type = AccountType.Premium;
    }

    public AccountDetails(double income, double balance, AccountType type)
    {
        this.income = income;
        this.balance = balance;
        this.type = type;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        AccountDetails r = null;
        if(rhs instanceof AccountDetails)
        {
            r = (AccountDetails)rhs;
        }

        if(r != null)
        {
            if(this.income != r.income)
            {
                return false;
            }
            if(this.balance != r.balance)
            {
                return false;
            }
            if(this.type != r.type)
            {
                if(this.type == null || r.type == null || !this.type.equals(r.type))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int hashCode()
    {
        int h_ = 5381;
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, "::BankService::AccountDetails");
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, income);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, balance);
        h_ = com.zeroc.IceInternal.HashUtil.hashAdd(h_, type);
        return h_;
    }

    public AccountDetails clone()
    {
        AccountDetails c = null;
        try
        {
            c = (AccountDetails)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void ice_writeMembers(com.zeroc.Ice.OutputStream ostr)
    {
        ostr.writeDouble(this.income);
        ostr.writeDouble(this.balance);
        AccountType.ice_write(ostr, this.type);
    }

    public void ice_readMembers(com.zeroc.Ice.InputStream istr)
    {
        this.income = istr.readDouble();
        this.balance = istr.readDouble();
        this.type = AccountType.ice_read(istr);
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, AccountDetails v)
    {
        if(v == null)
        {
            _nullMarshalValue.ice_writeMembers(ostr);
        }
        else
        {
            v.ice_writeMembers(ostr);
        }
    }

    static public AccountDetails ice_read(com.zeroc.Ice.InputStream istr)
    {
        AccountDetails v = new AccountDetails();
        v.ice_readMembers(istr);
        return v;
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, java.util.Optional<AccountDetails> v)
    {
        if(v != null && v.isPresent())
        {
            ice_write(ostr, tag, v.get());
        }
    }

    static public void ice_write(com.zeroc.Ice.OutputStream ostr, int tag, AccountDetails v)
    {
        if(ostr.writeOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            int pos = ostr.startSize();
            ice_write(ostr, v);
            ostr.endSize(pos);
        }
    }

    static public java.util.Optional<AccountDetails> ice_read(com.zeroc.Ice.InputStream istr, int tag)
    {
        if(istr.readOptional(tag, com.zeroc.Ice.OptionalFormat.FSize))
        {
            istr.skip(4);
            return java.util.Optional.of(AccountDetails.ice_read(istr));
        }
        else
        {
            return java.util.Optional.empty();
        }
    }

    private static final AccountDetails _nullMarshalValue = new AccountDetails();

    /** @hidden */
    public static final long serialVersionUID = 5935976401895249161L;
}
